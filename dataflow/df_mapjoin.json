{
	"name": "df_mapjoin",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Azure_SQL",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DS_Azure_SQ",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_SQL_Blob",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1",
					"description": "Inner join on dbo.emp and dbo.dept"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empno as integer,",
				"          ename as string,",
				"          job as string,",
				"          mgr as integer,",
				"          hiredate as date,",
				"          sal as integer,",
				"          comm as integer,",
				"          deptno as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source(output(",
				"          deptno as integer,",
				"          dname as string,",
				"          loc as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     batchSize: 0,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2",
				"source1, source2 join(source1@deptno == source2@deptno,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {Order ID} as string,",
				"          {Unit Price} as string,",
				"          {Customer Name} as string,",
				"          {Product Name} as string,",
				"          City as string,",
				"          {Order Date} as string,",
				"          {Ship Date} as string,",
				"          {Quantity ordered new} as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}